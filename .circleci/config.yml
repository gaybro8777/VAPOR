version: 2
jobs:
  build_ubuntu16:
    docker:
      - image: sgpearse/vapor3-ubuntu16:latest

    steps:
      - checkout

      - run:
          name: cmake and make
          command: |
            cd /VAPOR
            git pull
            cd build
            cmake ..
            make


  build_ubuntu18:
    docker:
      - image: sgpearse/vapor3-ubuntu18:latest

    steps:
      - checkout

      - run:
          name: cmake and make
          command: |
            cd /VAPOR
            git pull
            cd build
            cmake ..
            make

  build_centos7_v2:
    docker:
      - image: centos:centos7

    steps:
      - run:
          name: install dependencies
          command: |
            yum -y clean all 
            yum -y clean metadata 
            yum -y update
            yum -y install epel-release 
            yum -y install cmake3 
            yum -y install make 
            yum -y install tar 
            yum -y install gcc-c++ 
            yum -y install curl 
            yum -y install xz-devel 
            yum -y install git 
            yum -y install freeglut-devel 
            yum -y install expat-devel 
            yum -y install libquadmath-devel 
            yum -y install python3-pip 
            yum -y install libXrender-devel 
            yum -y install libSM-devel 
            yum -y install fontconfig-devel 
            pip3 install gdown

  build_centos7:
    docker:
      - image: sgpearse/vapor3-centos7:latest

    steps:
      - checkout

      - run:
          name: cmake and make
          command: |
            cd /VAPOR
            git pull
            cd build
            cmake ..
            make  


  build_osx: # runs not using `Workflows` must have a `build` job as entry point
    macos:  # indicate that we are using the macOS executor
      xcode: "11.1.0" # indicate our selected version of Xcode
    steps: # a series of commands to run
      - checkout  # pull down code from your version control system.
      - run:
          # run our tests using xcode's cli tool `xcodebuild`
          name: Run Unit Tests
          command: xcodebuild test -scheme circleci-demo-macos
      - run:
          # build our application
          name: Build Application
          command: xcodebuild
      - run:
          # compress Xcode's build output so that it can be stored as an artifact
          name: Compress app for storage
          command: zip -r app.zip build/Release/circleci-demo-macos.app
      - store_artifacts: # store this build output. Read more: https://circleci.com/docs/2.0/artifacts/
          path: app.zip
          destination: app



  printTime:
    docker:
      - image: sgpearse/vapor3-ubuntu:latest

    steps:
      - run:
        name: Print the Current Time
        command: date

workflows:
  version: 2
  build:
    jobs:
      - build_ubuntu16
      - build_ubuntu18
      - build_centos7
      - build_centos7_v2
